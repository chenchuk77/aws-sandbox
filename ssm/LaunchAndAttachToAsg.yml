description: |
  *Adding a new wordpress instance to an AutoScalingGroup with Multi-AZ RDS deployment.*
  ---
  # LaunchAndAttachToAsg
    This is an automation document to launch a new EC2 instance into an existing AutoScallingGroup. some network parametr
    ## Required parameters
    * LaunchTemplateName
    * AutoScallingGroupName

    Network parameters also necessary to create the instance in the **same vpc and subnets** of the existing wordpress servers:
    * VpcId
    * Subnets
    * DbSubGroup

    Parameters necessary for cloud-init to configure the instance:
    * OperatorEMail
    * KeyName
    * DBUser
    * DBPassword

    see on github: [LaunchAndAttachToAsg.yml](https://github.com/chenchuk77/aws-sandbox/blob/main/ssm/LaunchAndAttachToAsg.yml).
schemaVersion: '0.3'
parameters:
  LaunchTemplateName:
    type: String
    default: WpLaunchTemplate-temp
  AutoScallingGroupName:
    type: String
    default: stack-aws-wpmaz-temp-WebServerGroup-1RX14XWX0AOJ
  OperatorEMail:
    type: String
    default: chenchuk@gmail.com
  KeyName:
    type: String
    default: key-wp-temp
  Subnets:
    type: String
    default: 'subnet-0f518055ebe79abba,subnet-0910c7a5b65d2b4a7'
  DBPassword:
    type: String
    default: '12345678'
  VpcId:
    type: String
    default: vpc-0933596d51f662ca0
  DbSubGroup:
    type: String
    default: chen-temp-eu-west-1-dbsg
  DBUser:
    type: String
    default: user
mainSteps:
  - name: RunInstances
    action: 'aws:executeAwsApi'
    inputs:
      Service: ec2
      Api: RunInstances
      LaunchTemplate:
        LaunchTemplateName: '{{ LaunchTemplateName }}'
      MaxCount: 1
      MinCount: 1
      TagSpecifications:
        - ResourceType: instance
          Tags:
            - Key: Name
              Value: Wordpress-temp
            - Key: deployed
              Value: SSM
    outputs:
      - Selector: '$.Instances[0].InstanceId'
        Type: String
        Name: InstanceId
  - name: WaitForInstance
    action: 'aws:waitForAwsResourceProperty'
    inputs:
      Service: ec2
      Api: DescribeInstanceStatus
      InstanceIds:
        - '{{RunInstances.InstanceId}}'
      PropertySelector: '$.InstanceStatuses[0].InstanceState.Name'
      DesiredValues:
        - running
  - name: AttachInstances
    action: 'aws:executeAwsApi'
    inputs:
      Service: autoscaling
      Api: AttachInstances
      InstanceIds:
        - '{{ RunInstances.InstanceId }}'
      AutoScalingGroupName: '{{ AutoScallingGroupName }}'
  - name: waitForAttach
    action: 'aws:waitForAwsResourceProperty'
    onFailure: Abort
    maxAttempts: 10
    timeoutSeconds: 60
    inputs:
      Service: autoscaling
      Api: DescribeAutoScalingInstances
      InstanceIds:
        - '{{RunInstances.InstanceId}}'
      PropertySelector: '$.AutoScalingInstances[0].AutoScalingGroupName'
      DesiredValues:
        - '{{ AutoScallingGroupName }}'
    isEnd: true
